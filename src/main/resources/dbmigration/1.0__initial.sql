-- apply changes
create table categories (
  id                            bigint generated by default as identity not null,
  user_id                       bigint,
  created_at                    timestamptz not null,
  updated_at                    timestamptz not null,
  is_deleted                    boolean default false not null,
  name                          varchar(255) not null,
  description                   varchar(255),
  avatar                        varchar(255),
  constraint pk_categories primary key (id)
);

create table friendships (
  id                            bigint generated by default as identity not null,
  user_id                       bigint,
  friend_id                     bigint,
  created_at                    timestamptz not null,
  updated_at                    timestamptz not null,
  is_deleted                    boolean default false not null,
  friendship_id                 varchar(255),
  status                        varchar(8) default 'PENDING',
  constraint ck_friendships_status check ( status in ('PENDING','ACCEPTED','REJECTED','BLOCKED')),
  constraint uq_friendships_friendship_id unique (friendship_id),
  constraint pk_friendships primary key (id)
);

create table paid_by (
  id                            bigint generated by default as identity not null,
  transaction_id                bigint not null,
  user_id                       bigint not null,
  amount                        float not null,
  created_at                    timestamptz not null,
  updated_at                    timestamptz not null,
  is_deleted                    boolean default false not null,
  constraint uq_paid_by_transaction_id unique (transaction_id),
  constraint pk_paid_by primary key (id)
);

create table settlements (
  id                            bigint generated by default as identity not null,
  amount                        float not null,
  date                          date,
  user_id                       bigint,
  friend_id                     bigint,
  created_at                    timestamptz not null,
  updated_at                    timestamptz not null,
  is_deleted                    boolean default false not null,
  currency                      varchar(3) default 'INR' not null,
  payment_method                varchar(4),
  constraint ck_settlements_currency check ( currency in ('INR','USD')),
  constraint ck_settlements_payment_method check ( payment_method in ('CASH')),
  constraint pk_settlements primary key (id)
);

create table split_details (
  id                            bigint generated by default as identity not null,
  transaction_id                bigint not null,
  user_id                       bigint not null,
  amount                        float not null,
  created_at                    timestamptz not null,
  updated_at                    timestamptz not null,
  is_deleted                    boolean default false not null,
  split_type                    varchar(10) default 'EQUAL' not null,
  constraint ck_split_details_split_type check ( split_type in ('EQUAL','PERCENTAGE','AMOUNT')),
  constraint uq_split_details_transaction_id unique (transaction_id),
  constraint pk_split_details primary key (id)
);

create table transactions (
  id                            bigint generated by default as identity not null,
  amount                        float not null,
  date                          date,
  category_id                   bigint,
  created_at                    timestamptz not null,
  updated_at                    timestamptz not null,
  is_deleted                    boolean default false not null,
  description                   varchar(255),
  type                          varchar(13) default 'EXPENSE' not null,
  currency                      varchar(3) default 'INR' not null,
  constraint ck_transactions_type check ( type in ('INCOME','EXPENSE','SELF_TRANSFER','INVESTMENT')),
  constraint ck_transactions_currency check ( currency in ('INR','USD')),
  constraint pk_transactions primary key (id)
);

create table users (
  id                            bigint generated by default as identity not null,
  created_at                    timestamptz not null,
  updated_at                    timestamptz not null,
  is_deleted                    boolean default false not null,
  first_name                    varchar(255),
  last_name                     varchar(255),
  email                         varchar(255) not null,
  avatar                        varchar(255),
  google_auth_id                varchar(255),
  role                          varchar(5) default 'USER' not null,
  constraint ck_users_role check ( role in ('USER','ADMIN')),
  constraint uq_users_email unique (email),
  constraint pk_users primary key (id)
);

create table user_balance (
  id                            bigint generated by default as identity not null,
  user_id                       bigint not null,
  friend_id                     bigint not null,
  balance                       float not null,
  created_at                    timestamptz not null,
  updated_at                    timestamptz not null,
  is_deleted                    boolean default false not null,
  constraint pk_user_balance primary key (id)
);

-- foreign keys and indices
create index ix_categories_user_id on categories (user_id);
alter table categories add constraint fk_categories_user_id foreign key (user_id) references users (id) on delete restrict on update restrict;

create index ix_friendships_user_id on friendships (user_id);
alter table friendships add constraint fk_friendships_user_id foreign key (user_id) references users (id) on delete restrict on update restrict;

create index ix_friendships_friend_id on friendships (friend_id);
alter table friendships add constraint fk_friendships_friend_id foreign key (friend_id) references users (id) on delete restrict on update restrict;

create index ix_settlements_user_id on settlements (user_id);
alter table settlements add constraint fk_settlements_user_id foreign key (user_id) references users (id) on delete restrict on update restrict;

create index ix_settlements_friend_id on settlements (friend_id);
alter table settlements add constraint fk_settlements_friend_id foreign key (friend_id) references users (id) on delete restrict on update restrict;

create index ix_transactions_category_id on transactions (category_id);
alter table transactions add constraint fk_transactions_category_id foreign key (category_id) references categories (id) on delete restrict on update restrict;

